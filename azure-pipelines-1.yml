# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# resources:
#   pipelines:
#   - pipeline: 'P'
#     source: 'PreReq'
#     project: epceylon

variables:
  Cluster: 'EmailSync'

stages:
- stage: 'Verification'
  pool:
    vmImage: 'ubuntu-latest'

  jobs:
  - deployment: 'VerifyVariables'
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo $(Cluster)
              cat > lambda-vars.py << EOL
              proj = sys.argv[1]
              paths = proj.split(".")[1:]
              lambdaParts = []
              
              for p in paths:
                  lambdaParts.append(p[0].lower() + p[1:])
                  
              lambdaName = "-".join(lambdaParts)
              print("##vso[task.setvariable variable=LambdaName]%s" %lambdaName)
              print("##vso[task.setvariable variable=TargetProject]%s" %proj)
              EOL

          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: 'lambda-vars.py'
              arguments: '$(resources.pipeline.P.pipelineID)'

          - script: |
              echo $(LambdaName)
              echo $(TargetProject)
          # - script: |
          #     echo $(resources.pipeline.P.pipelineID)
          #     echo $(resources.pipeline.P.runName)
          #     echo $(resources.pipeline.P.runID)
          #     echo $(Build.Reason)
          #     echo See https://aka.ms/yaml
          #     buildSource=$(Build.SourceBranch)
          #     echo Branch $(Build.SourceBranch)
          #     tag=${buildSource#*tags/}
          #     echo $tag
          #   displayName: 'Run a multi-line script'
